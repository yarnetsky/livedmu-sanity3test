"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sidebar = void 0;
var FilterList_1 = require("./FilterList");
var UploadButton_1 = require("./UploadButton");
var react_1 = __importStar(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var ui_1 = require("@sanity/ui");
var icons_1 = require("@sanity/icons");
var StyledDivider = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  opacity: 0.1;\n  margin: '20px 0';\n"], ["\n  opacity: 0.1;\n  margin: '20px 0';\n"])));
var Sidebar = function (_a) {
    var _b = _a.extensions, extensions = _b === void 0 ? [] : _b, loading = _a.loading, onClearFilters = _a.onClearFilters, onExtensionClick = _a.onExtensionClick, onTagClick = _a.onTagClick, onTagDrop = _a.onTagDrop, onUpload = _a.onUpload, _c = _a.tags, tags = _c === void 0 ? [] : _c;
    var _d = (0, react_1.useState)(false), hasActiveTags = _d[0], setHasActiveTags = _d[1];
    (0, react_1.useEffect)(function () {
        setHasActiveTags(__spreadArray(__spreadArray([], extensions, true), tags, true).filter(function (_a) {
            var isActive = _a.isActive;
            return isActive;
        }).length === 0);
    }, [extensions, tags]);
    return (react_1.default.createElement(ui_1.Flex, { direction: "column", style: { width: 250 } },
        react_1.default.createElement(ui_1.Stack, { padding: 4, style: { overflowY: 'auto' } },
            react_1.default.createElement(ui_1.Stack, { space: 3 },
                react_1.default.createElement(ui_1.Heading, { as: "h2", size: 1 }, "Filters"),
                react_1.default.createElement(ui_1.Inline, null,
                    react_1.default.createElement(ui_1.Button, { disabled: Boolean(loading) || hasActiveTags, onClick: onClearFilters, fontSize: [1], icon: icons_1.CloseIcon, mode: "ghost", padding: 2, text: "Clear filters" })),
                react_1.default.createElement(StyledDivider, null),
                react_1.default.createElement(FilterList_1.FilterList, { items: extensions, onItemClick: onExtensionClick }),
                react_1.default.createElement(StyledDivider, null),
                react_1.default.createElement(FilterList_1.FilterList, { items: tags, onItemClick: onTagClick, onItemDrop: onTagDrop }))),
        react_1.default.createElement(ui_1.Stack, { padding: 3, space: 3, style: { marginTop: 'auto' } },
            react_1.default.createElement(UploadButton_1.UploadButton, { disabled: loading, onUpload: onUpload }))));
};
exports.Sidebar = Sidebar;
var templateObject_1;
